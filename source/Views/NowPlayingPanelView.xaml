<UserControl x:Class="NowPlaying.Views.NowPlayingPanelView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:utils="clr-namespace:NowPlaying.Utils"
             xmlns:ctrls="clr-namespace:NowPlaying.Controls">

    <UserControl.Resources>
        <ResourceDictionary>
            <utils:BoolInvert x:Key="BoolInvert"/>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../NowPlayingStyles.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid Width="auto" Height="auto">
        
        <!--top panel cache activity/status-->
        <StackPanel Orientation="Vertical" VerticalAlignment="Top">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,9.5,126,0">
                <UserControl Content="{Binding TopPanelView}"/>
            </StackPanel>
        </StackPanel>

        <DockPanel Margin="0,8.5,0,0">
            
            <!--top menu buttons-->
            <StackPanel DockPanel.Dock="Top">
                <StackPanel Orientation="Horizontal" Margin="5,0,0,5">
                    <ctrls:PluginSearchBox
                        Height="31" Width="300"
                        Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged, Mode=OneWayToSource}"
                        ToolTip="{DynamicResource LOCNowPlayingAddGamesSearchToolTip}"
                        Margin="0,0,10,0"/>
                    <ctrls:PluginTopPanelItem
                        Command="{Binding ToggleShowCacheRoots}"
                        ToolTip="{Binding ShowCacheRootsToolTip}"
                        Style="{DynamicResource TopPanelButton}">
                        <Rectangle 
                            Width="22" Height="22">
                            <Rectangle.Style>
                                <Style TargetType="Rectangle">
                                    <Setter Property="Fill" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=ctrls:PluginTopPanelItem}}"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType=ctrls:PluginTopPanelItem}}" Value="True">
                                            <Setter Property="Fill" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=ctrls:PluginTopPanelItem}}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Rectangle.Style>
                            <Rectangle.OpacityMask>
                                <ImageBrush ImageSource="{Binding RootsIcon}"/>
                            </Rectangle.OpacityMask>
                        </Rectangle>
                    </ctrls:PluginTopPanelItem>
                    <ctrls:PluginTopPanelItem
                        Content="🔧" FontSize="17"
                        Command="{Binding ToggleShowSettings}"
                        ToolTip="{Binding ShowSettingsToolTip}"
                        Style="{DynamicResource TopPanelButton}"/>

                </StackPanel>
                <Separator DockPanel.Dock="Top" Background="{DynamicResource PanelSeparatorBrush}"/>
            </StackPanel>
        
            <!--settings panel-->
            <StackPanel DockPanel.Dock="Bottom" Visibility="{Binding SettingsVisibility}">
                <Separator DockPanel.Dock="Top" Margin="0,5,0,0" Background="{DynamicResource PanelSeparatorBrush}"/>
                <TextBlock 
                    Text="{DynamicResource LOCNowPlayingSettingsHeading}" 
                    Style="{DynamicResource HeadingText}" Margin="10,10,0,10"/>
                <UserControl 
                    Content="{Binding SettingsView}"
                    Margin="0,0,0,15"/>
                <StackPanel 
                    Orientation="Horizontal" 
                    Margin="20,0,0,20">
                    <Button 
                        Content="{DynamicResource LOCNowPlayingTermsSave}" 
                        Command="{Binding SaveSettingsCommand}" 
                        Style="{DynamicResource BottomButton}" Width="70" Height="35" 
                        Margin="0,0,10,0"/>
                    <Button 
                        Content="{DynamicResource LOCNowPlayingTermsCancel}" 
                        Style="{DynamicResource BottomButton}" Width="70" Height="35" 
                        Command="{Binding CancelSettingsCommand}"/>
                </StackPanel>
            </StackPanel>

            <!--cache installation progress panel-->
            <UserControl DockPanel.Dock="Bottom" Content="{Binding InstallProgressView}"/>
            
            <!--cache roots view panel-->
            <UserControl DockPanel.Dock="Top" Margin="10,0,0,0" Content="{Binding CacheRootsView}"/>

            <!--game caches heading-->
            <StackPanel 
                DockPanel.Dock="Top" Margin="10,0,0,0"
                Orientation="Horizontal" 
                Visibility="{Binding GameCachesVisibility}">
                <TextBlock 
                    Text="{DynamicResource LOCNowPlayingGameCachesHeading}" 
                    Style="{DynamicResource HeadingText}"/>
            </StackPanel>
           
            <!--game caches list view + controls, using up available dock space-->
            <Grid 
                MaxHeight="{Binding Path=ActualHeight, RelativeSource={RelativeSource AncestorType=Dock}}"
                VerticalAlignment="Top">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <ListView 
                    Grid.Row="0" Margin="10,0,0,0" 
                    Name="GameCaches" 
                    Visibility="{Binding GameCachesVisibility}"
                    ItemsSource="{Binding GameCaches}"
                    IsSynchronizedWithCurrentItem="True"
                    SelectionMode="Extended"
                    MouseUp="GameCaches_OnMouseUp"
                    Loaded="GameCaches_ResizeColumns"
                    utils:GridViewUtils.HorizontalShiftWheelScroll="True"
                    utils:GridViewUtils.AutoSort="True"
                    utils:GridViewUtils.SecondaryAutoSortBy="Title,Ascending">

                    <ListView.View>
                        <GridView>
                            <GridView.ColumnHeaderContainerStyle>
                                <Style TargetType="GridViewColumnHeader" BasedOn="{StaticResource {x:Type GridViewColumnHeader}}">
                                    <Setter Property="ContextMenu">
                                        <Setter.Value>
                                            <ContextMenu Name="ColumnShowHideMenu">
                                                <MenuItem 
                                                    Header="{DynamicResource LOCNowPlayingTermsTitle}"
                                                    StaysOpenOnClick="True" IsCheckable="True" IsChecked="{Binding ShowTitleColumn}"/>
                                                <MenuItem 
                                                    Header="{DynamicResource LOCNowPlayingTermsPlatform}"
                                                    StaysOpenOnClick="True" IsCheckable="True" IsChecked="{Binding ShowPlatformColumn}"/>
                                                <MenuItem 
                                                    Header="{DynamicResource LOCNowPlayingTermsSourceDirectory}"
                                                    StaysOpenOnClick="True" IsCheckable="True" IsChecked="{Binding ShowSourceDirColumn}"/>
                                                <MenuItem 
                                                    Header="{DynamicResource LOCNowPlayingTermsStatus}"
                                                    StaysOpenOnClick="True" IsCheckable="True" IsChecked="{Binding ShowStatusColumn}"/>
                                                <MenuItem 
                                                    Header="{DynamicResource LOCNowPlayingTermsCanInstall}"
                                                    StaysOpenOnClick="True" IsCheckable="True" IsChecked="{Binding ShowCanInstallColumn}"/>
                                                <MenuItem 
                                                    Header="{DynamicResource LOCNowPlayingTermsInstallEta}"
                                                    StaysOpenOnClick="True" IsCheckable="True" IsChecked="{Binding ShowInstallEtaColumn}"/>
                                                <MenuItem 
                                                    Header="{DynamicResource LOCNowPlayingTermsSize}"
                                                    StaysOpenOnClick="True" IsCheckable="True" IsChecked="{Binding ShowSizeColumn}"/>
                                                <MenuItem 
                                                    Header="{DynamicResource LOCNowPlayingTermsRoot}"
                                                    Visibility="{Binding MultipleRootsVisibility}"
                                                    StaysOpenOnClick="True" IsCheckable="True" IsChecked="{Binding ShowRootColumn}"/>
                                                <MenuItem 
                                                    Header="{DynamicResource LOCNowPlayingTermsSpaceAvailable}"
                                                    StaysOpenOnClick="True" IsCheckable="True" IsChecked="{Binding ShowSpaceAvailColumn}"/>
                                            </ContextMenu>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </GridView.ColumnHeaderContainerStyle>

                            <GridViewColumn 
                                utils:GridViewUtils.PropertyName="Title"
                                utils:GridViewUtils.SortedByDefault="Ascending"
                                utils:GridViewUtils.AutoWidth="True"
                                utils:GridViewUtils.MinWidth="220"
                                utils:GridViewUtils.HideColumn="{Binding ShowTitleColumn, Converter={StaticResource BoolInvert}}">
                                <GridViewColumnHeader 
                                    Content="{DynamicResource LOCNowPlayingTermsTitle}" 
                                    ToolTip="{DynamicResource LOCNowPlayingGameCacheTitleToolTip}"/>
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <!--bottom layer: is selected text (black)-->
                                            <TextBlock Text="{Binding Title}" Foreground="Black"/>

                                            <!--top layer: normal text (color varies, dynamically bound, hidden when selected)-->
                                            <TextBlock 
                                                x:Name="NormalText"
                                                Text="{Binding Title}" 
                                                Foreground="{utils:DynamicResourceBinding InstalledColor}"/>
                                        </Grid>
                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}" Value="True">
                                                <Setter TargetName="NormalText" Property="Visibility" Value="Hidden"/>
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                            <GridViewColumn 
                                utils:GridViewUtils.PropertyName="Platform"
                                utils:GridViewUtils.CustomSort="{Binding CustomPlatformSort}"
                                utils:GridViewUtils.MinWidth="80"
                                utils:GridViewUtils.HideColumn="{Binding ShowPlatformColumn, Converter={StaticResource BoolInvert}}">
                                <GridViewColumnHeader
                                    Content="{DynamicResource LOCNowPlayingTermsPlatform}"
                                    ToolTip="{DynamicResource LOCNowPlayingGameCachePlatformToolTip}"/>
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <!--bottom layer: is selected text (black)-->
                                            <TextBlock Text="{Binding Platform}" Foreground="Black"/>

                                            <!--top layer: normal text (color varies, dynamically bound, hidden when selected)-->
                                            <TextBlock 
                                                x:Name="NormalText"
                                                Text="{Binding Platform}" 
                                                Foreground="{utils:DynamicResourceBinding InstalledColor}"/>
                                        </Grid>
                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}" Value="True">
                                                <Setter TargetName="NormalText" Property="Visibility" Value="Hidden"/>
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                            <GridViewColumn 
                                utils:GridViewUtils.PropertyName="InstallDir"
                                utils:GridViewUtils.AutoWidth="True"
                                utils:GridViewUtils.MinWidth="130"
                                utils:GridViewUtils.HideColumn="{Binding ShowSourceDirColumn, Converter={StaticResource BoolInvert}}">
                                <GridViewColumnHeader
                                    Content="{DynamicResource LOCNowPlayingTermsSourceDirectory}"
                                    ToolTip="{DynamicResource LOCNowPlayingGameCacheSourceDirToolTip}"/>
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <!--bottom layer: is selected text (black)-->
                                            <TextBlock Text="{Binding InstallDir}" Foreground="Black"/>

                                            <!--top layer: normal text (color varies, dynamically bound, hidden when selected)-->
                                            <TextBlock 
                                                x:Name="NormalText"
                                                Text="{Binding InstallDir}" 
                                                Foreground="{utils:DynamicResourceBinding InstalledColor}"/>
                                        </Grid>
                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}" Value="True">
                                                <Setter TargetName="NormalText" Property="Visibility" Value="Hidden"/>
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                            <GridViewColumn 
                                utils:GridViewUtils.PropertyName="Status"
                                utils:GridViewUtils.MinWidth="190"
                                utils:GridViewUtils.HideColumn="{Binding ShowStatusColumn, Converter={StaticResource BoolInvert}}">
                                <GridViewColumnHeader 
                                    Content="{DynamicResource LOCNowPlayingTermsStatus}" 
                                    ToolTip="{DynamicResource LOCNowPlayingGameCacheStatusToolTip}"/>
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <!--bottom layer: is selected text (black)-->
                                            <TextBlock Text="{Binding Status}" Foreground="Black"/>

                                            <!--top layer: normal text (color varies, dynamically bound, hidden when selected)-->
                                            <TextBlock 
                                                x:Name="NormalText"
                                                Text="{Binding Status}" 
                                                Foreground="{utils:DynamicResourceBinding StatusColor}"/>
                                        </Grid>
                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}" Value="True">
                                                <Setter TargetName="NormalText" Property="Visibility" Value="Hidden"/>
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                            <GridViewColumn 
                                utils:GridViewUtils.PropertyName="CanInstallCache"
                                utils:GridViewUtils.MinWidth="97"
                                utils:GridViewUtils.HideColumn="{Binding ShowCanInstallColumn, Converter={StaticResource BoolInvert}}">
                                <GridViewColumnHeader 
                                    Content="{DynamicResource LOCNowPlayingTermsCanInstall}" 
                                    ToolTip="{DynamicResource LOCNowPlayingGameCacheCanInstallToolTip}"/>
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <!--bottom layer: is selected text (black)-->
                                            <TextBlock Text="{Binding CanInstallCache}" Foreground="Black"/>

                                            <!--top layer: normal text (color varies, dynamically bound, hidden when selected)-->
                                            <TextBlock
                                                x:Name="NormalText"
                                                Text="{Binding CanInstallCache}" 
                                                Foreground="{utils:DynamicResourceBinding CanInstallCacheColor}"/>
                                        </Grid>
                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}" Value="True">
                                                <Setter TargetName="NormalText" Property="Visibility" Value="Hidden"/>
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                            <GridViewColumn 
                                DisplayMemberBinding="{Binding InstallEta}" 
                                utils:GridViewUtils.CustomSort="{Binding CustomEtaSort}"
                                utils:GridViewUtils.MinWidth="92"
                                utils:GridViewUtils.HideColumn="{Binding ShowInstallEtaColumn, Converter={StaticResource BoolInvert}}">
                                <GridViewColumnHeader 
                                    Content="{DynamicResource LOCNowPlayingTermsInstallEta}" 
                                    ToolTip="{DynamicResource LOCNowPlayingGameCacheCanInstallEtaToolTip}"/>
                            </GridViewColumn>

                            <GridViewColumn 
                                utils:GridViewUtils.PropertyName="CacheInstalledSize" 
                                utils:GridViewUtils.CustomSort="{Binding CustomSizeSort}"
                                utils:GridViewUtils.MinWidth="125"
                                utils:GridViewUtils.HideColumn="{Binding ShowSizeColumn, Converter={StaticResource BoolInvert}}">
                                <GridViewColumnHeader 
                                    Content="{DynamicResource LOCNowPlayingTermsSize}" 
                                    ToolTip="{DynamicResource LOCNowPlayingGameCacheSizeToolTip}"/>
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <!--bottom layer: is selected text (black)-->
                                            <TextBlock Text="{Binding CacheInstalledSize}" Foreground="Black"/>

                                            <!--top layer: normal text (color varies, dynamically bound, hidden when selected)-->
                                            <TextBlock
                                                x:Name="NormalText"
                                                Text="{Binding CacheInstalledSize}"
                                                Foreground="{utils:DynamicResourceBinding CacheInstalledSizeColor}"/>
                                        </Grid>
                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}" Value="True">
                                                <Setter TargetName="NormalText" Property="Visibility" Value="Hidden"/>
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                            <GridViewColumn 
                                DisplayMemberBinding="{Binding Device}"
                                utils:GridViewUtils.FixedWidth="{Binding GameCachesRootColumnWidth}"
                                utils:GridViewUtils.HideColumn="{Binding ShowRootColumn, Converter={StaticResource BoolInvert}}">
                                <GridViewColumnHeader 
                                    Content="{DynamicResource LOCNowPlayingTermsRoot}" 
                                    ToolTip="{DynamicResource LOCNowPlayingGameCacheRootToolTip}"/>
                            </GridViewColumn>

                            <GridViewColumn 
                                utils:GridViewUtils.PropertyName="CacheRootSpaceAvailable" 
                                utils:GridViewUtils.CustomSort="{Binding CustomSpaceAvailableSort}"
                                utils:GridViewUtils.MinWidth="125"
                                utils:GridViewUtils.HideColumn="{Binding ShowSpaceAvailColumn, Converter={StaticResource BoolInvert}}">
                                <GridViewColumnHeader 
                                    Content="{DynamicResource LOCNowPlayingTermsSpaceAvailable}" 
                                    ToolTip="{DynamicResource LOCNowPlayingGameCacheSpaceToolTip}"/>
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <!--bottom layer: is selected text (black)-->
                                            <TextBlock Text="{Binding CacheRootSpaceAvailable}" Foreground="Black"/>

                                            <!--top layer: normal text (color varies, dynamically bound, hidden when selected)-->
                                            <TextBlock
                                                x:Name="NormalText"
                                                Text="{Binding CacheRootSpaceAvailable}"
                                                Foreground="{utils:DynamicResourceBinding CacheRootSpaceAvailableColor}"/>
                                        </Grid>
                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}" Value="True">
                                                <Setter TargetName="NormalText" Property="Visibility" Value="Hidden"/>
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                        </GridView>
                    </ListView.View>
                    <ListView.ContextMenu>
                        <ContextMenu>
                            <MenuItem 
                                Header="{DynamicResource LOCNowPlayingTermsRefresh}"
                                Command="{Binding RefreshCachesCommand}">
                                <MenuItem.Icon>
                                    <TextBlock 
                                        Text="⟳" FontSize="17" 
                                        VerticalAlignment="Center" 
                                        HorizontalAlignment="Center" 
                                        Foreground="{DynamicResource GlyphBrush}"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem 
                                Header="{Binding InstallCachesMenu}" 
                                Command="{Binding InstallCachesCommand}" 
                                Visibility="{Binding InstallCachesVisibility}">
                                <MenuItem.Icon>
                                    <TextBlock 
                                        Text="⭳" FontSize="18" 
                                        VerticalAlignment="Center" 
                                        HorizontalAlignment="Center" 
                                        Foreground="{DynamicResource GlyphBrush}"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem
                                Header="{Binding UninstallCachesMenu}" 
                                Command="{Binding UninstallCachesCommand}" 
                                Visibility="{Binding UninstallCachesVisibility}">
                                <MenuItem.Icon>
                                    <TextBlock 
                                        Text="⏏" FontSize="12" 
                                        VerticalAlignment="Center" 
                                        HorizontalAlignment="Center" 
                                        Foreground="{DynamicResource GlyphBrush}"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <!--NOTE: ItemsSource must use OneWay binding b/c the items are shared-->
                            <MenuItem 
                                Header="{Binding RerootCachesMenu}"
                                ItemsSource="{Binding RerootCachesSubMenuItems, Mode=OneWay}"
                                Visibility="{Binding RerootCachesVisibility}">
                                <MenuItem.Icon>
                                    <TextBlock 
                                        Text="🖉" FontSize="13" 
                                        VerticalAlignment="Center" 
                                        HorizontalAlignment="Center" 
                                        Foreground="{DynamicResource GlyphBrush}"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem
                                Header="{Binding DisableCachesMenu}"
                                Command="{Binding DisableCachesCommand}"
                                Visibility="{Binding DisableCachesVisibility}">
                                <MenuItem.Icon>
                                    <TextBlock 
                                        Text="➖" FontSize="11" 
                                        VerticalAlignment="Center" 
                                        HorizontalAlignment="Center" 
                                        Foreground="{DynamicResource GlyphBrush}"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem 
                                Header="{Binding CancelQueuedInstallsMenu}"
                                Command="{Binding CancelQueuedInstallsCommand}"
                                Visibility="{Binding CancelQueuedInstallsVisibility}">
                                <MenuItem.Icon>
                                    <TextBlock 
                                        Text="❌" FontSize="11" 
                                        VerticalAlignment="Center" 
                                        HorizontalAlignment="Center" 
                                        Foreground="{DynamicResource GlyphBrush}"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem 
                                Header="{Binding PauseInstallMenu}"
                                Command="{Binding PauseInstallCommand}"
                                Visibility="{Binding PauseInstallVisibility}">
                                <MenuItem.Icon>
                                    <TextBlock 
                                        Text="⏸" FontSize="12" 
                                        VerticalAlignment="Center" 
                                        HorizontalAlignment="Center" 
                                        Foreground="{DynamicResource GlyphBrush}"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem 
                                Header="{Binding CancelInstallMenu}"
                                Command="{Binding CancelInstallCommand}"
                                Visibility="{Binding CancelInstallVisibility}">
                                <MenuItem.Icon>
                                    <TextBlock 
                                        Text="❌" FontSize="11" 
                                        VerticalAlignment="Center" 
                                        HorizontalAlignment="Center" 
                                        Foreground="{DynamicResource GlyphBrush}"/>
                                </MenuItem.Icon>
                            </MenuItem>
                        </ContextMenu>
                    </ListView.ContextMenu>
                </ListView>

                <!--game caches control panel, snapped to bottom of listview-->
                <StackPanel 
                    Grid.Row="1" Margin="10,5,0,10"
                    VerticalAlignment="Top"
                    Orientation="Horizontal" 
                    Visibility="{Binding GameCachesVisibility}">
                    <Button
                        Content="⟳" Padding="0,0,0,3" FontSize="20"
                        ToolTip="{DynamicResource LOCNowPlayingRefreshGameCaches}"  
                        Command="{Binding RefreshCachesCommand}"
                        Style="{DynamicResource SmallButton}"/>
                    <Button 
                        Content="➕" FontSize="12"
                        ToolTip="{DynamicResource LOCNowPlayingAddGameCaches}"
                        Command="{Binding AddGameCachesCommand}"
                        Style="{DynamicResource SmallButton}"/>
                    <Button 
                        Content="➖" FontSize="12"
                        ToolTip="{Binding DisableCachesMenu}"
                        Command="{Binding DisableCachesCommand}"
                        Style="{DynamicResource SmallButton}"/>
                    <Button 
                        Content="🖉" FontSize="18"
                        ToolTip="{Binding RerootCachesMenu}"
                        Command="{Binding RerootClickCanExecute}"
                        Visibility="{Binding MultipleRootsVisibility}"
                        Style="{DynamicResource SmallButton}"
                        Click="Reroot_ButtonClick">
                        <Button.ContextMenu>
                            <ContextMenu>
                                <!--NOTE: The ItemsSource must use OneWay binding b/c the items are shared-->
                                <MenuItem 
                                    Header="{Binding RerootCachesMenu, Mode=OneWay}"
                                    ItemsSource="{Binding RerootCachesSubMenuItems, Mode=OneWay}"/>
                            </ContextMenu>
                        </Button.ContextMenu>
                    </Button>
                    <Button
                        Margin="15,0,0,0"
                        Content="⭳" FontSize="20"
                        ToolTip="{Binding InstallCachesMenu}"
                        Command="{Binding InstallCachesCommand}"
                        Style="{DynamicResource SmallButton}"/>
                    <Button 
                        Content="⏏" FontSize="16"
                        ToolTip="{Binding UninstallCachesMenu}"
                        Command="{Binding UninstallCachesCommand}"
                        Style="{DynamicResource SmallButton}"/>
                </StackPanel>
            </Grid>

        </DockPanel>
        
        <!--this darkens our panel whenever a modal dialog is displayed (e.g. add cache root, add game caches)-->
        <Rectangle
            Width="{Binding Path=ActualWidth, RelativeSource={RelativeSource AncestorType=UserControl}}" 
            Height="{Binding Path=ActualHeight, RelativeSource={RelativeSource AncestorType=UserControl}}" 
            Visibility="{Binding ModalDimmingVisibility}"
            Fill="Black"
            Opacity="0.5"/>
        
    </Grid>
</UserControl>
