<UserControl x:Class="NowPlaying.Views.NowPlayingPanelView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:utils="clr-namespace:NowPlaying.Utils"
             xmlns:ctrls="clr-namespace:NowPlaying.Controls">

    <UserControl.Resources>
        <ResourceDictionary>
            <utils:BoolInvert x:Key="BoolInvert"/>
            <utils:BoolToVisibilityConverter x:Key="BoolToVisibility"/>
            <utils:IsNullConverter x:Key="IsNull"/>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../NowPlayingStyles.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        
        <!--Top/lower/main panel background coloring/darkening + optional drop shadow-->

        <!--main panel-->
        <Border Background="{Binding Theme.MainPanelBackgroundBrush}">
            <Grid>
                <FadeImage ImageDarkeningBrush="{Binding Theme.MainPanelDarkeningBrush}"/>
                <DockPanel>

                    <!--top panel-->
                    <Border
                        DockPanel.Dock="Top"
                        Background="{Binding Theme.TopPanelBackgroundBrush}"
                        BorderBrush="{Binding Theme.TopPanelBorderBrush}"
                        BorderThickness="{Binding Theme.TopPanelBorderThickness}"
                        Effect="{Binding Theme.TopPanelDropShadow}"
                        Height="{Binding Theme.TopPanelHeight}"/>

                    <!--lower panel-->
                    <Border
                        BorderBrush="{Binding Theme.LowerPanelBorderBrush}"
                        BorderThickness="{Binding Theme.LowerPanelBorderThickness}"/>

                </DockPanel>
            </Grid>
        </Border>


        <!--NowPlaying panel view contents-->
        <DockPanel>
            
            <!--TopPanel contents + separator-->
            <Grid DockPanel.Dock="Top" Height="{Binding Theme.TopPanelHeight}" Margin="0,0,0,5">
                <Grid 
                    HorizontalAlignment="{Binding Theme.TopPanelHorizontalAlignment}" 
                    Margin="{Binding Theme.TopPanelMargin}"
                    VerticalAlignment="Bottom"> 

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>  <!--0. FarLeft-->
                        <ColumnDefinition Width="auto"/>  <!--1. LGap-->
                        <ColumnDefinition Width="auto"/>  <!--2. Left-->
                        <ColumnDefinition MinWidth="{Binding Theme.TopPanelMinCenterGap}" Width="*"/>  <!--3. Middle-->
                        <ColumnDefinition Width="auto"/>  <!--4. Right-->
                        <ColumnDefinition Width="auto"/>  <!--5. RGap-->
                        <ColumnDefinition Width="auto"/>  <!--6. FarRight-->
                    </Grid.ColumnDefinitions>

                    <!--============= search + menu buttons ============-->
                    <ctrls:PluginSearchBox
                        Grid.Column="{Binding Theme.TopPanelSearchBoxColumn}"
                        Grid.ColumnSpan="{Binding Theme.TopPanelSearchBoxColumnSpan}"
                        Height="{Binding Theme.TopPanelSearchBoxHeight}" 
                        Width="{Binding Theme.TopPanelSearchBoxWidth}"
                        Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, Delay=100}"
                        ToolTip="{DynamicResource LOCNowPlayingAddGamesSearchToolTip}"
                        Style="{Binding Theme.TopPanelSearchBoxStyle}"
                        Margin="{Binding Theme.TopPanelSearchBoxMargin}"
                        WindowChrome.IsHitTestVisibleInChrome="True"/>
                        
                    <!--Gap column: optional spacing between search box and menu items-->
                    <Border 
                        Grid.Column="{Binding Theme.TopPanelSearchGapColumn}"
                        Margin="0" Width="{Binding Theme.TopPanelSearchGap}" 
                        Visibility="{Binding Theme.TopPanelSearchGapEnable, Converter={StaticResource BoolToVisibility}}"/>

                    <!--menu items group-->
                    <StackPanel
                        Orientation="Horizontal"
                        Grid.Column="{Binding Theme.TopPanelMenuItemsColumn}"
                        Grid.ColumnSpan="{Binding Theme.TopPanelMenuItemsColumnSpan}"
                        Margin="{Binding Theme.TopPanelMenuItemsMargin}"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Bottom">
                            
                        <ctrls:PluginTopPanelItem
                            Command="{Binding ToggleShowCacheRoots}"
                            ToolTip="{Binding ShowCacheRootsToolTip}"
                            Style="{Binding Theme.TopPanelItemStyle}"
                            Height="{Binding Theme.TopPanelItemHeight}">
                            <Rectangle 
                                Width="{Binding Theme.RootsIconRectSize}" 
                                Height="{Binding Theme.RootsIconRectSize}">
                                <Rectangle.Style>
                                    <Style TargetType="Rectangle">
                                        <Setter Property="Fill" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=ctrls:PluginTopPanelItem}}"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType=ctrls:PluginTopPanelItem}}" Value="True">
                                                <Setter Property="Fill" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=ctrls:PluginTopPanelItem}}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Rectangle.Style>
                                <Rectangle.OpacityMask>
                                    <ImageBrush ImageSource="{Binding RootsIcon}"/>
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </ctrls:PluginTopPanelItem>
                        <ctrls:PluginTopPanelItem
                            Content="🔧" Padding="0,-2,0,0"
                            FontSize="{Binding Theme.SettingsIconFontSize}" 
                            Command="{Binding ToggleShowSettings}"
                            ToolTip="{Binding ShowSettingsToolTip}"
                            Style="{Binding Theme.TopPanelItemStyle}"
                            Height="{Binding Theme.TopPanelItemHeight}"/>
                    </StackPanel>

                    <!--progress bar-->
                    <ctrls:PluginTopPanelItem
                        Grid.Column="{Binding Theme.TopPanelProgressBarColumn}"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Bottom"
                        Visibility="{Binding IsTopPanelVisible, Converter={StaticResource BoolToVisibility}}"
                        ToolTip="{DynamicResource LOCNowPlayingTopPanelToolTip}"
                        Style="{Binding Theme.TopPanelItemStyle}"
                        Height="{Binding Theme.TopPanelItemHeight}">
                        <UserControl Content="{Binding TopPanelView}"/>
                    </ctrls:PluginTopPanelItem>
                </Grid>
            </Grid>
            <Separator VerticalAlignment="Bottom" Margin="0" Background="{Binding Theme.TopPanelSeparatorBrush}"/>

            <!--================== settings panel ==================-->
            <Border 
                DockPanel.Dock="Bottom" Margin="0,5,0,0" 
                Visibility="{Binding SettingsVisibility}"
                BorderBrush="{Binding Theme.MainPanelBorderBrush}" 
                BorderThickness="0,1,0,0">
                <StackPanel>
                    <Separator Margin="0" Background="{Binding Theme.MainPanelSeparatorBrush}"/>
                    <TextBlock 
                        Text="{DynamicResource LOCNowPlayingSettingsHeading}" 
                        Style="{DynamicResource HeadingText}" Margin="10,10,0,10"/>
                    <UserControl 
                        Content="{Binding SettingsView}"
                        Margin="0,0,0,15"/>
                    <StackPanel 
                        Orientation="Horizontal" 
                        Margin="20,0,0,20">
                        <Button 
                            Content="{DynamicResource LOCNowPlayingTermsSave}" 
                            Command="{Binding SaveSettingsCommand}" 
                            Style="{DynamicResource BottomButton}"
                            Width="{Binding Path=ActualWidth, ElementName=RefButton}"
                            Height="{Binding Path=ActualHeight, ElementName=RefButton}"
                            Margin="0,0,10,0"/>
                        <Button
                            Name="RefButton"
                            Content="{DynamicResource LOCNowPlayingTermsCancel}" 
                            Style="{DynamicResource BottomButton}" MinWidth="70" MinHeight="35" 
                            Command="{Binding CancelSettingsCommand}"/>
                    </StackPanel>
                </StackPanel>
            </Border>

            <!--cache installation progress panel-->
            <Border 
                DockPanel.Dock="Bottom" 
                Visibility="{Binding ShowInstallProgressView, Converter={StaticResource BoolToVisibility}}"
                BorderBrush="{Binding Theme.MainPanelBorderBrush}" 
                BorderThickness="0,1,0,0">
                <StackPanel>
                    <Separator Background="{Binding Theme.MainPanelSeparatorBrush}" Margin="0,0,0,10"/>
                    <UserControl Content="{Binding InstallProgressView}"/>
                </StackPanel>
            </Border>
            
            <!--cache roots view panel-->
            <UserControl DockPanel.Dock="Top" Margin="10,0,0,0" Content="{Binding CacheRootsView}"/>

            <!--game caches heading-->
            <TextBlock 
                DockPanel.Dock="Top" Margin="10,0,0,0"
                Visibility="{Binding GameCachesHeadingVisibility}"
                Text="{DynamicResource LOCNowPlayingGameCachesHeading}"
                Style="{DynamicResource HeadingText}"/>
           
            <!--game caches list view + controls, using up available dock space-->
            <Grid
                Margin="10,0,0,0"
                VerticalAlignment="Top">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <!--Hidden text boxes used for determining status column MinWidths, a priori-->
                <TextBox 
                    Name="HiddenStatusQueuedUninstall" 
                    Grid.Row="0" Visibility="Hidden" HorizontalAlignment="Left" Padding="5,0,15,0"
                    Text="{Binding StatusQueuedUninstallText, Mode=OneWay}"/>
                <TextBox 
                    Name="HiddenStatusQueuedInstall" 
                    Grid.Row="0" Visibility="Hidden" HorizontalAlignment="Left" Padding="5,0,15,0"
                    Text="{Binding StatusQueuedInstallText, Mode=OneWay}"/>
                <TextBox 
                    Name="HiddenStatusSlowInstall" 
                    Grid.Row="0" Visibility="Hidden" HorizontalAlignment="Left" Padding="5,0,15,0"
                    Text="{Binding StatusSlowInstallText, Mode=OneWay}"/>                
                <TextBox 
                    Name="HiddenStatusUninstall" 
                    Grid.Row="0" Visibility="Hidden" HorizontalAlignment="Left" Padding="5,0,15,0"
                    Text="{Binding StatusUninstallText, Mode=OneWay}"/>
                <TextBox 
                    Name="HiddenStatusDefault" 
                    Grid.Row="0" Visibility="Hidden" HorizontalAlignment="Left" Padding="5,0,15,0"
                    Text="{Binding StatusDefaultText, Mode=OneWay}"/>
                <TextBox 
                    Name="HiddenStatusDefault2" 
                    Grid.Row="0" Visibility="Hidden" HorizontalAlignment="Left" Padding="5,0,15,0"
                    Text="{Binding StatusDefault2Text, Mode=OneWay}"/>
                
                <ListView
                    Grid.Row="0" Padding="0" 
                    Name="GameCaches"
                    Visibility="{Binding GameCachesVisibility}"
                    ItemsSource="{Binding GameCaches}"
                    IsSynchronizedWithCurrentItem="True"
                    SelectionMode="Extended"
                    MouseUp="GameCaches_OnMouseUp"
                    Loaded="GameCaches_ResizeColumns"
                    utils:GridViewUtils.HorizontalShiftWheelScroll="True"
                    utils:GridViewUtils.HorizontalShiftWheelScrollFlipped="{Binding Settings.HorizontalScrollFlipped}"
                    utils:GridViewUtils.AutoSort="True"
                    utils:GridViewUtils.SecondaryAutoSortBy="Title,Ascending"
                    utils:GridViewUtils.SortedColumnName="{Binding SortedColumnName, Mode=OneWayToSource}"
                    Margin="{Binding Theme.ListViewMargin}" 
                    Style="{Binding Theme.ListViewStyle}">

                    <ListView.View>
                        <GridView>
                            <GridView.ColumnHeaderContainerStyle>
                                <Style TargetType="GridViewColumnHeader" BasedOn="{StaticResource {x:Type GridViewColumnHeader}}">
                                    <Setter Property="ContextMenu">
                                        <Setter.Value>
                                            <ContextMenu Name="ColumnShowHideMenu">
                                                <MenuItem 
                                                    Header="{DynamicResource LOCNowPlayingTermsTitle}"
                                                    StaysOpenOnClick="True" IsCheckable="True" IsChecked="{Binding ShowTitleColumn}"/>
                                                <MenuItem 
                                                    Header="{DynamicResource LOCNowPlayingTermsPlatform}"
                                                    StaysOpenOnClick="True" IsCheckable="True" IsChecked="{Binding ShowPlatformColumn}"/>
                                                <MenuItem 
                                                    Header="{DynamicResource LOCNowPlayingTermsSourceDirectory}"
                                                    StaysOpenOnClick="True" IsCheckable="True" IsChecked="{Binding ShowSourceDirColumn}"/>
                                                <MenuItem 
                                                    Header="{DynamicResource LOCNowPlayingTermsStatus}"
                                                    StaysOpenOnClick="True" IsCheckable="True" IsChecked="{Binding ShowStatusColumn}"/>
                                                <MenuItem 
                                                    Header="{DynamicResource LOCNowPlayingTermsCanInstall}"
                                                    StaysOpenOnClick="True" IsCheckable="True" IsChecked="{Binding ShowCanInstallColumn}"/>
                                                <MenuItem 
                                                    Header="{DynamicResource LOCNowPlayingTermsInstallEta}"
                                                    StaysOpenOnClick="True" IsCheckable="True" IsChecked="{Binding ShowInstallEtaColumn}"/>
                                                <MenuItem 
                                                    Header="{DynamicResource LOCNowPlayingTermsSize}"
                                                    StaysOpenOnClick="True" IsCheckable="True" IsChecked="{Binding ShowSizeColumn}"/>
                                                <MenuItem 
                                                    Header="{DynamicResource LOCNowPlayingTermsRoot}"
                                                    Visibility="{Binding MultipleRootsVisibility}"
                                                    StaysOpenOnClick="True" IsCheckable="True" IsChecked="{Binding ShowRootColumn}"/>
                                                <MenuItem 
                                                    Header="{DynamicResource LOCNowPlayingTermsSpaceAvailable}"
                                                    StaysOpenOnClick="True" IsCheckable="True" IsChecked="{Binding ShowSpaceAvailColumn}"/>
                                            </ContextMenu>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </GridView.ColumnHeaderContainerStyle>

                            <GridViewColumn
                                utils:GridViewUtils.PropertyName="Title"
                                utils:GridViewUtils.SortedByDefault="Ascending"
                                utils:GridViewUtils.AutoWidth="True"
                                utils:GridViewUtils.MinWidth="220"
                                utils:GridViewUtils.HideColumn="{Binding ShowTitleColumn, Converter={StaticResource BoolInvert}}">
                                <GridViewColumnHeader
                                    ToolTip="{DynamicResource LOCNowPlayingGameCacheTitleToolTip}">
                                    <TextBlock Text="{DynamicResource LOCNowPlayingTermsTitle}" Margin="0,0,12,0"/>
                                </GridViewColumnHeader>
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock x:Name="Text1" Text="{Binding Title}" Foreground="{Binding InstalledBrush}" Padding="0,0,10,0"/>
                                        <DataTemplate.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Theme.SelectedListViewItemBrush, Converter={StaticResource IsNull}}" Value="False"/>
                                                    <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}" Value="True"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter TargetName="Text1" Property="Foreground" Value="{Binding Theme.SelectedListViewItemBrush}"/>
                                            </MultiDataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                            <GridViewColumn 
                                utils:GridViewUtils.PropertyName="Platform"
                                utils:GridViewUtils.CustomSort="{Binding CustomPlatformSort}"
                                utils:GridViewUtils.MinWidth="Auto"
                                utils:GridViewUtils.HideColumn="{Binding ShowPlatformColumn, Converter={StaticResource BoolInvert}}">
                                <GridViewColumnHeader
                                    ToolTip="{DynamicResource LOCNowPlayingGameCachePlatformToolTip}">
                                    <TextBlock Text="{DynamicResource LOCNowPlayingTermsPlatform}" Margin="0,0,12,0"/>
                                </GridViewColumnHeader>
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock x:Name="Text1" Text="{Binding Platform}" Foreground="{Binding InstalledBrush}" Padding="0,0,10,0"/>
                                        <DataTemplate.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Theme.SelectedListViewItemBrush, Converter={StaticResource IsNull}}" Value="False"/>
                                                    <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}" Value="True"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter TargetName="Text1" Property="Foreground" Value="{Binding Theme.SelectedListViewItemBrush}"/>
                                            </MultiDataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                            <GridViewColumn 
                                utils:GridViewUtils.PropertyName="InstallDir"
                                utils:GridViewUtils.AutoWidth="True"
                                utils:GridViewUtils.MinWidth="220"
                                utils:GridViewUtils.HideColumn="{Binding ShowSourceDirColumn, Converter={StaticResource BoolInvert}}">
                                <GridViewColumnHeader
                                    ToolTip="{DynamicResource LOCNowPlayingGameCacheSourceDirToolTip}">
                                    <TextBlock Text="{DynamicResource LOCNowPlayingTermsSourceDirectory}" Margin="0,0,12,0"/>
                                </GridViewColumnHeader>
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock x:Name="Text1" Text="{Binding InstallDir}" Foreground="{Binding InstalledBrush}" Padding="0,0,10,0"/>
                                        <DataTemplate.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Theme.SelectedListViewItemBrush, Converter={StaticResource IsNull}}" Value="False"/>
                                                    <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}" Value="True"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter TargetName="Text1" Property="Foreground" Value="{Binding Theme.SelectedListViewItemBrush}"/>
                                            </MultiDataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                            <GridViewColumn
                                utils:GridViewUtils.PropertyName="Status"
                                utils:GridViewUtils.MinWidth="{Binding StatusColumnMinWidth}"
                                utils:GridViewUtils.HideColumn="{Binding ShowStatusColumn, Converter={StaticResource BoolInvert}}">
                                <GridViewColumnHeader 
                                    ToolTip="{DynamicResource LOCNowPlayingGameCacheStatusToolTip}">
                                    <TextBlock Text="{DynamicResource LOCNowPlayingTermsStatus}" Margin="0,0,12,0"/>
                                </GridViewColumnHeader>
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock x:Name="Text1" Text="{Binding Status}" Foreground="{Binding StatusBrush}" Padding="0,0,10,0"/>
                                        <DataTemplate.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Theme.SelectedListViewItemBrush, Converter={StaticResource IsNull}}" Value="False"/>
                                                    <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}" Value="True"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter TargetName="Text1" Property="Foreground" Value="{Binding Theme.SelectedListViewItemBrush}"/>
                                            </MultiDataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                            <GridViewColumn 
                                utils:GridViewUtils.PropertyName="CanInstallCache"
                                utils:GridViewUtils.MinWidth="Auto"
                                utils:GridViewUtils.HideColumn="{Binding ShowCanInstallColumn, Converter={StaticResource BoolInvert}}">
                                <GridViewColumnHeader 
                                    ToolTip="{DynamicResource LOCNowPlayingGameCacheCanInstallToolTip}">
                                    <TextBlock Text="{DynamicResource LOCNowPlayingTermsCanInstall}" Margin="0,0,12,0"/>
                                </GridViewColumnHeader>
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock x:Name="Text1" Text="{Binding CanInstallCache}" Foreground="{Binding CanInstallCacheBrush}" Padding="0,0,10,0"/>
                                        <DataTemplate.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Theme.SelectedListViewItemBrush, Converter={StaticResource IsNull}}" Value="False"/>
                                                    <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}" Value="True"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter TargetName="Text1" Property="Foreground" Value="{Binding Theme.SelectedListViewItemBrush}"/>
                                            </MultiDataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                            <GridViewColumn 
                                utils:GridViewUtils.PropertyName="InstallEta"
                                utils:GridViewUtils.CustomSort="{Binding CustomEtaSort}"
                                utils:GridViewUtils.MinWidth="Auto"
                                utils:GridViewUtils.HideColumn="{Binding ShowInstallEtaColumn, Converter={StaticResource BoolInvert}}">
                                <GridViewColumnHeader 
                                    ToolTip="{DynamicResource LOCNowPlayingGameCacheCanInstallEtaToolTip}">
                                    <TextBlock Text="{DynamicResource LOCNowPlayingTermsInstallEta}" Margin="0,0,12,0"/>
                                </GridViewColumnHeader>
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock x:Name="Text1" Text="{Binding InstallEta}" Padding="0,0,10,0"/>
                                        <DataTemplate.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Theme.SelectedListViewItemBrush, Converter={StaticResource IsNull}}" Value="False"/>
                                                    <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}" Value="True"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter TargetName="Text1" Property="Foreground" Value="{Binding Theme.SelectedListViewItemBrush}"/>
                                            </MultiDataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                            <GridViewColumn 
                                utils:GridViewUtils.PropertyName="CacheInstalledSize" 
                                utils:GridViewUtils.CustomSort="{Binding CustomSizeSort}"
                                utils:GridViewUtils.MinWidth="Auto"
                                utils:GridViewUtils.HideColumn="{Binding ShowSizeColumn, Converter={StaticResource BoolInvert}}">
                                <GridViewColumnHeader 
                                    ToolTip="{DynamicResource LOCNowPlayingGameCacheSizeToolTip}">
                                    <TextBlock Text="{DynamicResource LOCNowPlayingTermsSize}" Margin="0,0,12,0"/>
                                </GridViewColumnHeader>
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock x:Name="Text1" Text="{Binding CacheInstalledSize}" Foreground="{Binding CacheInstalledSizeBrush}" Padding="0,0,10,0"/>
                                        <DataTemplate.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Theme.SelectedListViewItemBrush, Converter={StaticResource IsNull}}" Value="False"/>
                                                    <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}" Value="True"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter TargetName="Text1" Property="Foreground" Value="{Binding Theme.SelectedListViewItemBrush}"/>
                                            </MultiDataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                            <GridViewColumn
                                utils:GridViewUtils.PropertyName="Device"
                                utils:GridViewUtils.FixedWidth="{Binding GameCachesRootColumnWidth}"
                                utils:GridViewUtils.HideColumn="{Binding ShowRootColumn, Converter={StaticResource BoolInvert}}">
                                <GridViewColumnHeader 
                                    ToolTip="{DynamicResource LOCNowPlayingGameCacheRootToolTip}">
                                    <TextBlock Text="{DynamicResource LOCNowPlayingTermsRoot}" Margin="0,0,12,0"/>
                                </GridViewColumnHeader>
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock x:Name="Text1" Text="{Binding Device}" Padding="0,0,10,0"/>
                                        <DataTemplate.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Theme.SelectedListViewItemBrush, Converter={StaticResource IsNull}}" Value="False"/>
                                                    <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}" Value="True"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter TargetName="Text1" Property="Foreground" Value="{Binding Theme.SelectedListViewItemBrush}"/>
                                            </MultiDataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                            <GridViewColumn 
                                utils:GridViewUtils.PropertyName="CacheRootSpaceAvailable" 
                                utils:GridViewUtils.CustomSort="{Binding CustomSpaceAvailableSort}"
                                utils:GridViewUtils.MinWidth="Auto"
                                utils:GridViewUtils.HideColumn="{Binding ShowSpaceAvailColumn, Converter={StaticResource BoolInvert}}">
                                <GridViewColumnHeader 
                                    ToolTip="{DynamicResource LOCNowPlayingGameCacheSpaceToolTip}">
                                    <TextBlock Text="{DynamicResource LOCNowPlayingTermsSpaceAvailable}" Margin="0,0,12,0"/>
                                </GridViewColumnHeader>
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock x:Name="Text1" Text="{Binding CacheRootSpaceAvailable}" Foreground="{Binding CacheRootSpaceAvailableBrush}" Padding="0,0,10,0"/>
                                        <DataTemplate.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Theme.SelectedListViewItemBrush, Converter={StaticResource IsNull}}" Value="False"/>
                                                    <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}" Value="True"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter TargetName="Text1" Property="Foreground" Value="{Binding Theme.SelectedListViewItemBrush}"/>
                                            </MultiDataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                        </GridView>
                    </ListView.View>
                    <ListView.ContextMenu>
                        <ContextMenu>
                            <MenuItem 
                                Header="{DynamicResource LOCNowPlayingTermsRefresh}"
                                Command="{Binding RefreshCachesCommand}">
                                <MenuItem.Icon>
                                    <TextBlock 
                                        Text="⟳" FontSize="17" 
                                        VerticalAlignment="Center" 
                                        HorizontalAlignment="Center" 
                                        Foreground="{DynamicResource GlyphBrush}"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem 
                                Header="{Binding InstallCachesMenu}" 
                                Command="{Binding InstallCachesCommand}" 
                                Visibility="{Binding InstallCachesVisibility}">
                                <MenuItem.Icon>
                                    <TextBlock 
                                        Text="⭳" FontSize="18" 
                                        VerticalAlignment="Center" 
                                        HorizontalAlignment="Center" 
                                        Foreground="{DynamicResource GlyphBrush}"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem
                                Header="{Binding UninstallCachesMenu}" 
                                Command="{Binding UninstallCachesCommand}" 
                                Visibility="{Binding UninstallCachesVisibility}">
                                <MenuItem.Icon>
                                    <TextBlock 
                                        Text="⏏" FontSize="12" 
                                        VerticalAlignment="Center" 
                                        HorizontalAlignment="Center" 
                                        Foreground="{DynamicResource GlyphBrush}"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <!--NOTE: ItemsSource must use OneWay binding b/c the items are shared-->
                            <MenuItem 
                                Header="{Binding RerootCachesMenu}"
                                ItemsSource="{Binding RerootCachesSubMenuItems, Mode=OneWay}"
                                Visibility="{Binding RerootCachesVisibility}">
                                <MenuItem.Icon>
                                    <TextBlock 
                                        Text="🖉" FontSize="13" 
                                        VerticalAlignment="Center" 
                                        HorizontalAlignment="Center" 
                                        Foreground="{DynamicResource GlyphBrush}"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem
                                Header="{Binding DisableCachesMenu}"
                                Command="{Binding DisableCachesCommand}"
                                Visibility="{Binding DisableCachesVisibility}">
                                <MenuItem.Icon>
                                    <TextBlock 
                                        Text="➖" FontSize="11" 
                                        VerticalAlignment="Center" 
                                        HorizontalAlignment="Center" 
                                        Foreground="{DynamicResource GlyphBrush}"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem 
                                Header="{Binding CancelQueuedInstallsMenu}"
                                Command="{Binding CancelQueuedInstallsCommand}"
                                Visibility="{Binding CancelQueuedInstallsVisibility}">
                                <MenuItem.Icon>
                                    <TextBlock 
                                        Text="❌" FontSize="11" 
                                        VerticalAlignment="Center" 
                                        HorizontalAlignment="Center" 
                                        Foreground="{DynamicResource GlyphBrush}"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem 
                                Header="{Binding PauseInstallMenu}"
                                Command="{Binding PauseInstallCommand}"
                                Visibility="{Binding PauseInstallVisibility}">
                                <MenuItem.Icon>
                                    <TextBlock 
                                        Text="⏸" FontSize="12" 
                                        VerticalAlignment="Center" 
                                        HorizontalAlignment="Center" 
                                        Foreground="{DynamicResource GlyphBrush}"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem 
                                Header="{Binding CancelInstallMenu}"
                                Command="{Binding CancelInstallCommand}"
                                Visibility="{Binding CancelInstallVisibility}">
                                <MenuItem.Icon>
                                    <TextBlock 
                                        Text="❌" FontSize="11" 
                                        VerticalAlignment="Center" 
                                        HorizontalAlignment="Center" 
                                        Foreground="{DynamicResource GlyphBrush}"/>
                                </MenuItem.Icon>
                            </MenuItem>
                        </ContextMenu>
                    </ListView.ContextMenu>
                </ListView>

                <!--game caches control panel, snapped to bottom of listview-->
                <StackPanel 
                    Grid.Row="1" Margin="0,5,0,10"
                    VerticalAlignment="Top"
                    Orientation="Horizontal" 
                    Visibility="{Binding GameCachesVisibility}">
                    <Button
                        Content="⟳" Padding="0,0,0,3" FontSize="20"
                        ToolTip="{DynamicResource LOCNowPlayingRefreshGameCaches}"  
                        Command="{Binding RefreshCachesCommand}"
                        Style="{DynamicResource SmallButton}"/>
                    <Button 
                        Content="➕" FontSize="12"
                        ToolTip="{DynamicResource LOCNowPlayingAddGameCaches}"
                        Command="{Binding AddGameCachesCommand}"
                        Style="{DynamicResource SmallButton}"/>
                    <Button 
                        Content="➖" FontSize="12"
                        ToolTip="{Binding DisableCachesMenu}"
                        Command="{Binding DisableCachesCommand}"
                        Style="{DynamicResource SmallButton}"/>
                    <Button 
                        Content="🖉" FontSize="18"
                        ToolTip="{Binding RerootCachesMenu}"
                        Command="{Binding RerootClickCanExecute}"
                        Visibility="{Binding MultipleRootsVisibility}"
                        Style="{DynamicResource SmallButton}"
                        Click="Reroot_ButtonClick">
                        <Button.ContextMenu>
                            <ContextMenu>
                                <!--NOTE: The ItemsSource must use OneWay binding b/c the items are shared-->
                                <MenuItem 
                                    Header="{Binding RerootCachesMenu, Mode=OneWay}"
                                    ItemsSource="{Binding RerootCachesSubMenuItems, Mode=OneWay}"/>
                            </ContextMenu>
                        </Button.ContextMenu>
                    </Button>
                    <Button
                        Margin="15,0,0,0"
                        Content="⭳" FontSize="20"
                        ToolTip="{Binding InstallCachesMenu}"
                        Command="{Binding InstallCachesCommand}"
                        Style="{DynamicResource SmallButton}"/>
                    <Button 
                        Content="⏏" FontSize="16"
                        ToolTip="{Binding UninstallCachesMenu}"
                        Command="{Binding UninstallCachesCommand}"
                        Style="{DynamicResource SmallButton}"/>
                </StackPanel>
            </Grid>

        </DockPanel>
        
        <!--this darkens our panel whenever a modal dialog is displayed (e.g. add cache root, add game caches)-->
        <Rectangle
            Visibility="{Binding ModalDimmingVisibility}"
            Fill="Black"
            Opacity="0.5"/>
        
    </Grid>
</UserControl>
