<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:ctrls="clr-namespace:NowPlaying.Controls"
                    xmlns:utils="clr-namespace:NowPlaying.Utils"
                    xmlns:popt="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options">

    <sys:Int32 x:Key="ToolTipInitialShowDelay">500</sys:Int32>
    <sys:Int32 x:Key="ToolTipBetweenShowDelay">1000</sys:Int32>

    <Style TargetType="{x:Type ctrls:PluginSearchBox}" BasedOn="{StaticResource {x:Type SearchBox}}"/>
    <Style x:Key="TopPanelPluginSearchBox" TargetType="ctrls:PluginSearchBox" BasedOn="{StaticResource {x:Type ctrls:PluginSearchBox}}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Background" Value="{DynamicResource TopPanelSearchBoxBackgroundBrush}"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="{DynamicResource ToolTipInitialShowDelay}"/>
        <Setter Property="ToolTipService.BetweenShowDelay" Value="{DynamicResource ToolTipBetweenShowDelay}"/>
    </Style>
    
    <Style TargetType="{x:Type ctrls:PluginTopPanelItem}" BasedOn="{StaticResource {x:Type TopPanelItem}}"/>
    <Style x:Key="ThemeTopPanelItem" TargetType="ctrls:PluginTopPanelItem" BasedOn="{StaticResource {x:Type ctrls:PluginTopPanelItem}}">
        <Setter Property="ToolTipService.InitialShowDelay" Value="{DynamicResource ToolTipInitialShowDelay}"/>
        <Setter Property="ToolTipService.BetweenShowDelay" Value="{DynamicResource ToolTipBetweenShowDelay}"/>
    </Style>
    
    <Style x:Key="FixedSizeWindow" TargetType="{x:Type WindowBase}" BasedOn="{StaticResource StandardWindowStyle}">
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome CaptionHeight="25" CornerRadius="0" ResizeBorderThickness="0"
                              NonClientFrameEdges ="None" UseAeroCaptionButtons="False" GlassFrameThickness="0"/>
            </Setter.Value>
        </Setter>
    </Style>

    <ImageBrush x:Key="SeasideMainWindowBackgroundBrush" 
                ImageSource="{ThemeFile 'Images/BackgroundGradient.png'}" 
                Stretch="UniformToFill" 
                popt:Freeze="True"/>

    <Style x:Key="ThemeProgressBarStyle" TargetType="{x:Type ProgressBar}" BasedOn="{StaticResource {x:Type ProgressBar}}"/>
    <Style x:Key="BasicProgressBarStyle" TargetType="{x:Type ProgressBar}"/>

    <Color x:Key="ProgressInstallFgColor">#FF247BA0</Color>
    <Color x:Key="ProgressInstallBgColor">#30000000</Color>
    <Color x:Key="ProgressSlowInstallFgColor">#80F0D020</Color>
    <Color x:Key="ProgressSlowInstallBgColor">#80202b4d</Color>
    
    <Color x:Key="SlowInstallColor">#FFF0D020</Color>
    <Color x:Key="TopPanelProcessingFgColor">#80F2F2F2</Color>
    <Color x:Key="TopPanelProcessingBgColor">#FF000000</Color>
    <Color x:Key="TopPanelEnableFgColor">#FF3CB371</Color>
    <Color x:Key="TopPanelEnableBgColor">#FF1E7B47</Color>
    <Color x:Key="TopPanelUninstallFgColor">#FFB22222</Color>
    <Color x:Key="TopPanelUninstallBgColor">#FF700000</Color>
    <Color x:Key="TransparentColor">#00000000</Color>

    <SolidColorBrush x:Key="ProgressInstallFgBrush" Color="{DynamicResource GlyphColor}"/>
    <SolidColorBrush x:Key="ProgressInstallBgBrush" Color="{DynamicResource ProgressInstallBgColor}"/>
    <SolidColorBrush x:Key="ProgressInstallFgBrush_GridViewCards" Color="#FF959595"/>
    <SolidColorBrush x:Key="ProgressSlowInstallFgBrush" Color="{DynamicResource ProgressSlowInstallFgColor}"/>
    <SolidColorBrush x:Key="ProgressSlowInstallBgBrush" Color="{DynamicResource ProgressSlowInstallBgColor}"/>
    
    <SolidColorBrush x:Key="InstallBrush" Color="{DynamicResource GlyphColor}"/>
    <SolidColorBrush x:Key="SlowInstallBrush" Color="{DynamicResource SlowInstallColor}"/>
    <SolidColorBrush x:Key="TopPanelProcessingFgBrush" Color="{DynamicResource TopPanelProcessingFgColor}"/>
    <SolidColorBrush x:Key="TopPanelProcessingBgBrush" Color="{DynamicResource TopPanelProcessingBgColor}"/>
    <SolidColorBrush x:Key="TopPanelEnableFgBrush" Color="{DynamicResource TopPanelEnableFgColor}"/>
    <SolidColorBrush x:Key="TopPanelEnableBgBrush" Color="{DynamicResource TopPanelEnableBgColor}"/>
    <SolidColorBrush x:Key="TopPanelUninstallFgBrush" Color="{DynamicResource TopPanelUninstallFgColor}"/>
    <SolidColorBrush x:Key="TopPanelUninstallBgBrush" Color="{DynamicResource TopPanelUninstallBgColor}"/>
    <SolidColorBrush x:Key="TransparentBrush" Color="{DynamicResource TransparentColor}"/>

    <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Setter Property="FontFamily" Value="{DynamicResource FontFamily}"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSize}"/>
    </Style>

    <Style x:Key="HeadingText" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="Foreground" Value="{DynamicResource GlyphBrush}"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Margin" Value="0,0,0,5"/>
    </Style>

    <Style x:Key="SubheadingText" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="Foreground" Value="{DynamicResource GlyphBrush}"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Margin" Value="0,0,0,5"/>
    </Style>

    <Style x:Key="SmallButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Width" Value="28"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="Padding" Value="0,0,0,0"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="{DynamicResource ToolTipInitialShowDelay}"/>
        <Setter Property="ToolTipService.BetweenShowDelay" Value="{DynamicResource ToolTipBetweenShowDelay}"/>
    </Style>

    <Style x:Key="InTextBoxButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Width" Value="20"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Padding" Value="0,0,0,0"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="{DynamicResource ToolTipInitialShowDelay}"/>
        <Setter Property="ToolTipService.BetweenShowDelay" Value="{DynamicResource ToolTipBetweenShowDelay}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="Transparent"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="GridViewColumnHeader" BasedOn="{StaticResource {x:Type GridViewColumnHeader}}">
        <Setter Property="ToolTipService.InitialShowDelay" Value="{DynamicResource ToolTipInitialShowDelay}"/>
        <Setter Property="ToolTipService.BetweenShowDelay" Value="{DynamicResource ToolTipBetweenShowDelay}"/>
    </Style>

    <Style TargetType="ListViewItem" BasedOn="{StaticResource {x:Type ListViewItem}}">
        <Setter Property="Padding" Value="5,0.5,5,0.5"/>
    </Style>
    
    <Style x:Key="ThemeListViewItem" TargetType="ListViewItem" BasedOn="{StaticResource {x:Type ListViewItem}}">
        <Setter Property="Padding" Value="5,0.5,5,0.5"/>
    </Style>

    <Style x:Key="ThemeListView" TargetType="ListView" BasedOn="{StaticResource {x:Type ListView}}">
        <Setter Property="ItemContainerStyle" Value="{DynamicResource ThemeListViewItem}"/>
    </Style>

    <Style TargetType="Label">
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Setter Property="FontFamily" Value="{DynamicResource FontFamily}"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSize}"/>
    </Style>

    <Style x:Key="BulletedLabel" TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <BulletDecorator Margin="{TemplateBinding Margin}">
                        <BulletDecorator.Bullet>
                            <Ellipse Width="5" Height="5" Fill="{TemplateBinding Foreground}"/>
                        </BulletDecorator.Bullet>
                        <TextBlock
                            VerticalAlignment="Top"
                            Text="{TemplateBinding Content}"
                            TextWrapping="Wrap"
                            Padding="10,0,0,0"/>
                    </BulletDecorator>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>