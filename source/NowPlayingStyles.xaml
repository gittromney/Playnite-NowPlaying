<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:ctrls="clr-namespace:NowPlaying.Controls">

    <Style TargetType="{x:Type ctrls:PluginSearchBox}" BasedOn="{StaticResource {x:Type SearchBox}}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Background" Value="{DynamicResource TopPanelSearchBoxBackgroundBrush}"/>
    </Style>
    <Style TargetType="{x:Type ctrls:PluginTopPanelItem}" BasedOn="{StaticResource {x:Type TopPanelItem}}"/>

    <Style x:Key="FixedSizeWindow" TargetType="{x:Type WindowBase}" BasedOn="{StaticResource StandardWindowStyle}">
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome CaptionHeight="25" CornerRadius="0" ResizeBorderThickness="0"
                              NonClientFrameEdges ="None" UseAeroCaptionButtons="False" GlassFrameThickness="0"/>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Color x:Key="SlowInstallColor">#FFF0D020</Color>
    <Color x:Key="TopPanelProcessingFgColor">#80F2F2F2</Color>
    <Color x:Key="TopPanelProcessingBgColor">#FF000000</Color>
    <Color x:Key="TopPanelEnableFgColor">#FF3CB371</Color>
    <Color x:Key="TopPanelEnableBgColor">#FF2E8B57</Color>
    <Color x:Key="TopPanelInstallFgColor">#FF247BA0</Color>
    <Color x:Key="TopPanelInstallBgColor">#80202b4d</Color>
    <Color x:Key="TopPanelSlowInstallFgColor">#80F0D020</Color>
    <Color x:Key="TopPanelSlowInstallBgColor">#80202b4d</Color>
    <Color x:Key="TopPanelUninstallFgColor">#FFB22222</Color>
    <Color x:Key="TopPanelUninstallBgColor">#FF800000</Color>
    <Color x:Key="TransparentBgColor">#20000000</Color>

    <SolidColorBrush x:Key="InstallBrush" Color="{DynamicResource GlyphColor}"/>
    <SolidColorBrush x:Key="SlowInstallBrush" Color="{DynamicResource SlowInstallColor}"/>
    <SolidColorBrush x:Key="TopPanelProcessingFgBrush" Color="{DynamicResource TopPanelProcessingFgColor}"/>
    <SolidColorBrush x:Key="TopPanelProcessingBgBrush" Color="{DynamicResource TopPanelProcessingBgColor}"/>
    <SolidColorBrush x:Key="TopPanelEnableFgBrush" Color="{DynamicResource TopPanelEnableFgColor}"/>
    <SolidColorBrush x:Key="TopPanelEnableBgBrush" Color="{DynamicResource TopPanelEnableBgColor}"/>
    <SolidColorBrush x:Key="TopPanelInstallFgBrush" Color="{DynamicResource GlyphColor}"/>
    <SolidColorBrush x:Key="TopPanelInstallBgBrush" Color="{DynamicResource TopPanelInstallBgColor}"/>
    <SolidColorBrush x:Key="TopPanelSlowInstallFgBrush" Color="{DynamicResource TopPanelSlowInstallFgColor}"/>
    <SolidColorBrush x:Key="TopPanelSlowInstallBgBrush" Color="{DynamicResource TopPanelSlowInstallBgColor}"/>
    <SolidColorBrush x:Key="TopPanelUninstallFgBrush" Color="{DynamicResource TopPanelUninstallFgColor}"/>
    <SolidColorBrush x:Key="TopPanelUninstallBgBrush" Color="{DynamicResource TopPanelUninstallBgColor}"/>
    <SolidColorBrush x:Key="TransparentBgBrush" Color="{DynamicResource TransparentBgColor}"/>

    <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Setter Property="FontFamily" Value="{DynamicResource FontFamily}"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSize}"/>
    </Style>

    <Style x:Key="HeadingText" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="Foreground" Value="{DynamicResource GlyphBrush}"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Margin" Value="0,0,0,5"/>
    </Style>

    <Style x:Key="SubheadingText" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="Foreground" Value="{DynamicResource GlyphBrush}"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Margin" Value="0,0,0,5"/>
    </Style>

    <Style x:Key="TopPanelButton" TargetType="ctrls:PluginTopPanelItem" BasedOn="{StaticResource {x:Type ctrls:PluginTopPanelItem}}">
        <Setter Property="Width" Value="32"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="Padding" Value="0,0,0,0"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="150"/>
        <Setter Property="ToolTipService.BetweenShowDelay" Value="0"/>
        <Setter Property="Margin" Value="0,0,8,0"/>
    </Style>

    <Style x:Key="SmallButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Width" Value="28"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="Padding" Value="0,0,0,0"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="150"/>
        <Setter Property="ToolTipService.BetweenShowDelay" Value="0"/>
    </Style>

    <Style x:Key="InTextBoxButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Width" Value="20"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Padding" Value="0,0,0,0"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="150"/>
        <Setter Property="ToolTipService.BetweenShowDelay" Value="0"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="Transparent"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="GridViewColumnHeader" BasedOn="{StaticResource {x:Type GridViewColumnHeader}}">
        <Setter Property="ToolTipService.InitialShowDelay" Value="150"/>
        <Setter Property="ToolTipService.BetweenShowDelay" Value="0"/>
    </Style>

    <Style TargetType="{x:Type ListViewItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border
                        BorderBrush="Transparent"
                        BorderThickness="0"
                        Background="{TemplateBinding Background}">

                        <GridViewRowPresenter 
                            x:Name="presenter"
                            HorizontalAlignment="Stretch" 
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                            Width="Auto" Margin="0" 
                            Content="{TemplateBinding Content}">

                            <GridViewRowPresenter.Resources>
                                <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}" Value="True">
                                            <Setter Property="Foreground" Value="Black"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </GridViewRowPresenter.Resources>
                        </GridViewRowPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource HoverBrush}"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource GlyphBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Label">
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Setter Property="FontFamily" Value="{DynamicResource FontFamily}"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSize}"/>
    </Style>

    <Style x:Key="BulletedLabel" TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <BulletDecorator Margin="{TemplateBinding Margin}">
                        <BulletDecorator.Bullet>
                            <Ellipse Width="5" Height="5" Fill="{TemplateBinding Foreground}"/>
                        </BulletDecorator.Bullet>
                        <TextBlock
                            VerticalAlignment="Top"
                            Text="{TemplateBinding Content}"
                            TextWrapping="Wrap"
                            Padding="10,0,0,0"/>
                    </BulletDecorator>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>